name: main

on: [ workflow_dispatch ]

jobs:
  cmake:
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-24.04 ]
        profile: [ "Debug", "Release" ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: "Get number of CPU cores"
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - uses: actions/checkout@v4

      - name: "Install dependencies"
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install --no-install-recommends              \
            gettext                                                     \
            libasound2-dev                                              \
            libbullet-dev                                               \
            libgnutls28-dev                                             \
            libopenxr-dev                                               \
            libqscintilla2-qt5-dev                                      \
            libsdl2-dev                                                 \
            libpng-dev                                                  \
            libvorbis-dev                                               \
            libvulkan-dev                                               \
            libwayland-dev                                              \
            libxcursor-dev                                              \
            libxkbcommon-dev                                            \
            libxrandr-dev                                               \
            qtbase5-dev                                                 \
            libtbb-dev                                                  \
            libembree-dev

      - name: "Configure: ${{ matrix.profile }}"
        run: |
          cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ matrix.profile }} -Bbuild_${{ matrix.profile }} -S.

      - name: "Build: ${{ matrix.profile }}"
        run: |
          cmake --build build_${{ matrix.profile }} --parallel ${{ steps.cpu-cores.outputs.count }} \
            --target qbsp vis light iqmtool fteqcc fteqw plug_jolt plug_hl2 librequake maps models fteextensions quakec-worldspawn

      - name: "Get version"
        id: version
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: worldspawn-${{ matrix.os }}-${{ matrix.profile }}-${{ steps.version.outputs.short_sha }}
          path: |
            game/*
          compression-level: 9
